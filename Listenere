package listeners;

import com.relevantcodes.extentreports.LogStatus;

import java.util.Set;

import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.testng.ITestContext;
import org.testng.ITestListener;
import org.testng.ITestResult;

import extentReports.ExtentManager;
import extentReports.ExtentTestManager;
import main.BaseTest;
 
public class TestListener extends BaseTest implements ITestListener {
 
public String suitename;
public String[] temp1;
public String[] temp2;

    private static String getTestMethodName(ITestResult iTestResult) {
        return iTestResult.getMethod().getConstructorOrMethod().getName();
    }
   
    //Before starting all tests, below method runs.
    @Override
    public void onStart(ITestContext iTestContext) {
        System.out.println("I am in onStart method " + iTestContext.getName());
        iTestContext.setAttribute("WebDriver", BaseTest.driver);
       
    }
 
    //After ending all tests, below method runs.
    @Override
    public void onFinish(ITestContext iTestContext) {
        System.out.println("I am in onFinish method " + iTestContext.getName());
        //Do tier down operations for extentreports reporting!
        ExtentTestManager.endTest();
        ExtentManager.getReporter().flush();
    }
   
 
    @Override
    public void onTestStart(ITestResult iTestResult) {
        System.out.println("I am in onTestStart method " +  getTestMethodName(iTestResult) + " start");
        //Start operation for extentreports.

    suitename = iTestResult.getTestContext().getSuite().getName();
    temp1 =suitename.split(" ");
    temp2 = iTestResult.getTestContext().getCurrentXmlTest().getParameter("search_key").split("_");
    ExtentManager.country  = temp1[0];
    ExtentManager.platform = temp1[1];    
    ExtentManager.environment = temp2[1];

//     ExtentTestManager.startTest(iTestResult.getMethod().getMethodName(),"");
    ExtentTestManager.startTest(iTestResult.getTestContext().getName(),"");
       
    }
 
    @Override
    public void onTestSuccess(ITestResult iTestResult) {
        System.out.println("I am in onTestSuccess method " +  getTestMethodName(iTestResult) + " succeed");
        //Extentreports log operation for passed tests.
       
        ExtentTestManager.getTest().log(LogStatus.PASS, "Test passed");
        ExtentTestManager.getTest().setDescription(iTestResult.getMethod().getDescription());
    }
 
    @Override
    public void onTestFailure(ITestResult iTestResult) {
        System.out.println("I am in onTestFailure method " +  getTestMethodName(iTestResult) + " failed");
 

 //Get driver from BaseTest and assign to local webdriver variable.
        Object testClass = iTestResult.getInstance();
        WebDriver webDriver = BaseTest.getDriver();
 
 //Take base64Screenshot screenshot.
 String base64Screenshot ="data:image/png;base64,"+((TakesScreenshot)webDriver).
 getScreenshotAs(OutputType.BASE64);

 
        //Extentreports log and screenshot operations for failed tests.
        ExtentTestManager.getTest().log(LogStatus.FAIL,"Test Failed",
                ExtentTestManager.getTest().addBase64ScreenShot(base64Screenshot));
        ExtentTestManager.getTest().setDescription(iTestResult.getMethod().getDescription());
        //webDriver.close();
    }
 
    @Override
    public void onTestSkipped(ITestResult iTestResult) {
        System.out.println("I am in onTestSkipped method "+  getTestMethodName(iTestResult) + " skipped");
        //Extentreports log operation for skipped tests.
        ExtentTestManager.getTest().log(LogStatus.SKIP, "Test Skipped");
        ExtentTestManager.getTest().setDescription(iTestResult.getMethod().getDescription());
    }
 
    @Override
    public void onTestFailedButWithinSuccessPercentage(ITestResult iTestResult) {
        System.out.println("Test failed but it is in defined success ratio " + getTestMethodName(iTestResult));
        ExtentTestManager.getTest().setDescription(iTestResult.getMethod().getDescription());
    }
 
}
